# This is the name of the workflow, visible on GitHub UI.
name: Build Neuromancer Code

# Here we tell GitHub to run the workflow when a commit
# is pushed or a Pull Request is opened.
on: [push, pull_request, workflow_dispatch]

# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  DoLintChecking:
    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest

    # This is the list of steps this job will run.
    steps:
      - name: Lint
      # You may pin to the exact commit or the version.
      # uses: arduino/arduino-lint-action@34273a972ebf4575065aaede94a51632888d7452
      uses: arduino/arduino-lint-action@v1.0.0
      with:
        # Path containing Arduino projects.
        path: # optional
        # Version of the Arduino Lint tool to use.
        version: # optional, default is 1.x
        # How strict the checks are.
        compliance: # optional, default is specification
        # Configuration of the checks for libraries in the Arduino Library Manager index.
        library-manager: # optional
        # The type of project to check.
        project-type: # optional, default is all
        # Search path recursively for projects to check.
        recursive: # optional, default is false
        # Save a JSON formatted report on the checks to this file.
        report-file: # optional
        # Show more information on the checks being run.
        verbose: # optional, default is false
        # Run the checks that only apply to official Arduino projects.
        official: # optional, default is false
        # GitHub access token used to get information from the GitHub API.
        token: # optional, default is ${{ github.token }}

  # This is the name of the job - can be whatever.
  BuildNavaFirmware:

    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type `arduino-platform`, in this case a
        # total of 2.
        arduino-platform: ["MightyCore:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following `include` section will be useless.
        include:
          # This works like this: when the platform is "arduino:samd", the
          # variable `fqbn` is set to "arduino:samd:nano_33_iot".
          - arduino-platform: "Mightycore:avr"
            fqbn: "MightyCore:avr:1284"

    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest

    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the `checkout` action.
      - name: Checkout
        uses: actions/checkout@v2

      # We use the `arduino/setup-arduino-cli` action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          arduino-cli core update-index --additional-urls="https://mcudude.github.io/MightyCore/package_MCUdude_MightyCore_index.json"
          arduino-cli core install --additional-urls="https://mcudude.github.io/MightyCore/package_MCUdude_MightyCore_index.json" ${{ matrix.arduino-platform }}

      - name: Install libraries
        run: arduino-cli lib install LiquidCrystal
          
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: arduino-cli compile -e --fqbn ${{ matrix.fqbn }} ./Nava2021
